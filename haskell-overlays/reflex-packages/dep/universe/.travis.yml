# This Travis job script has been generated by a script via
#
#   haskell-ci '--config' 'cabal.haskell-ci' 'cabal.project'
#
# For more information, see https://github.com/haskell-CI/haskell-ci
#
# version: 0.3.20190425
#
language: c
dist: xenial
git:
  # whether to recursively clone submodules
  submodules: false
branches:
  only:
    - master
cache:
  directories:
    - $HOME/.cabal/packages
    - $HOME/.cabal/store
before_cache:
  - rm -fv $CABALHOME/packages/hackage.haskell.org/build-reports.log
  # remove files that are regenerated by 'cabal update'
  - rm -fv $CABALHOME/packages/hackage.haskell.org/00-index.*
  - rm -fv $CABALHOME/packages/hackage.haskell.org/*.json
  - rm -fv $CABALHOME/packages/hackage.haskell.org/01-index.cache
  - rm -fv $CABALHOME/packages/hackage.haskell.org/01-index.tar
  - rm -fv $CABALHOME/packages/hackage.haskell.org/01-index.tar.idx
  - rm -rfv $CABALHOME/packages/head.hackage
matrix:
  include:
    - compiler: ghc-8.8.1
      addons: {"apt":{"sources":["hvr-ghc"],"packages":["ghc-8.8.1","cabal-install-3.0"]}}
      env: GHCHEAD=true
    - compiler: ghc-8.6.4
      addons: {"apt":{"sources":["hvr-ghc"],"packages":["ghc-8.6.4","cabal-install-2.4"]}}
    - compiler: ghc-8.4.4
      addons: {"apt":{"sources":["hvr-ghc"],"packages":["ghc-8.4.4","cabal-install-2.4"]}}
    - compiler: ghc-8.2.2
      addons: {"apt":{"sources":["hvr-ghc"],"packages":["ghc-8.2.2","cabal-install-2.4"]}}
    - compiler: ghc-8.0.2
      addons: {"apt":{"sources":["hvr-ghc"],"packages":["ghc-8.0.2","cabal-install-2.4"]}}
    - compiler: ghc-7.10.3
      addons: {"apt":{"sources":["hvr-ghc"],"packages":["ghc-7.10.3","cabal-install-2.4"]}}
    - compiler: ghc-7.8.4
      addons: {"apt":{"sources":["hvr-ghc"],"packages":["ghc-7.8.4","cabal-install-2.4"]}}
    - compiler: ghc-7.6.3
      addons: {"apt":{"sources":["hvr-ghc"],"packages":["ghc-7.6.3","cabal-install-2.4"]}}
    - compiler: ghc-7.4.2
      addons: {"apt":{"sources":["hvr-ghc"],"packages":["ghc-7.4.2","cabal-install-2.4"]}}
    - compiler: ghc-7.0.4
      addons: {"apt":{"sources":["hvr-ghc"],"packages":["ghc-7.0.4","cabal-install-2.4"]}}
  allow_failures:
    - compiler: ghc-8.8.1
before_install:
  - HC=$(echo "/opt/$CC/bin/ghc" | sed 's/-/\//')
  - HCPKG="$HC-pkg"
  - unset CC
  - CABAL=/opt/ghc/bin/cabal
  - CABALHOME=$HOME/.cabal
  - export PATH="$CABALHOME/bin:$PATH"
  - TOP=$(pwd)
  - HCNUMVER=$(( $(${HC} --numeric-version|sed -E 's/([0-9]+)\.([0-9]+)\.([0-9]+).*/\1 * 10000 + \2 * 100 + \3/') ))
  - echo $HCNUMVER
  - CABAL="$CABAL -vnormal+nowrap+markoutput"
  - set -o pipefail
  - |
    echo 'function blue(s) { printf "\033[0;34m" s "\033[0m " }'           >> .colorful.awk
    echo 'BEGIN { state = "output"; }'                                     >> .colorful.awk
    echo '/^-----BEGIN CABAL OUTPUT-----$/ { state = "cabal" }'            >> .colorful.awk
    echo '/^-----END CABAL OUTPUT-----$/ { state = "output" }'             >> .colorful.awk
    echo '!/^(-----BEGIN CABAL OUTPUT-----|-----END CABAL OUTPUT-----)/ {' >> .colorful.awk
    echo '  if (state == "cabal") {'                                       >> .colorful.awk
    echo '    print blue($0)'                                              >> .colorful.awk
    echo '  } else {'                                                      >> .colorful.awk
    echo '    print $0'                                                    >> .colorful.awk
    echo '  }'                                                             >> .colorful.awk
    echo '}'                                                               >> .colorful.awk
  - cat .colorful.awk
  - |
    color_cabal_output () {
      awk -f $TOP/.colorful.awk
    }
  - echo text | color_cabal_output
install:
  - ${CABAL} --version
  - echo "$(${HC} --version) [$(${HC} --print-project-git-commit-id 2> /dev/null || echo '?')]"
  - TEST=--enable-tests
  - BENCH=--enable-benchmarks
  - GHCHEAD=${GHCHEAD-false}
  - rm -f $CABALHOME/config
  - |
    echo "verbose: normal +nowrap +markoutput"          >> $CABALHOME/config
    echo "remote-build-reporting: anonymous"            >> $CABALHOME/config
    echo "remote-repo-cache: $CABALHOME/packages"       >> $CABALHOME/config
    echo "logs-dir:          $CABALHOME/logs"           >> $CABALHOME/config
    echo "world-file:        $CABALHOME/world"          >> $CABALHOME/config
    echo "extra-prog-path:   $CABALHOME/bin"            >> $CABALHOME/config
    echo "symlink-bindir:    $CABALHOME/bin"            >> $CABALHOME/config
    echo "installdir:        $CABALHOME/bin"            >> $CABALHOME/config
    echo "build-summary:     $CABALHOME/logs/build.log" >> $CABALHOME/config
    echo "store-dir:         $CABALHOME/store"          >> $CABALHOME/config
    echo "install-dirs user"                            >> $CABALHOME/config
    echo "  prefix: $CABALHOME"                         >> $CABALHOME/config
    echo "repository hackage.haskell.org"               >> $CABALHOME/config
    echo "  url: http://hackage.haskell.org/"           >> $CABALHOME/config
  - |
    if $GHCHEAD; then
    echo "allow-newer: $($HCPKG list --simple-output | sed -E 's/([a-zA-Z-]+)-[0-9.]+/*:\1/g')" >> $CABALHOME/config
    
    echo "repository head.hackage"                                                        >> $CABALHOME/config
    echo "   url: http://head.hackage.haskell.org/"                                       >> $CABALHOME/config
    echo "   secure: True"                                                                >> $CABALHOME/config
    echo "   root-keys: 07c59cb65787dedfaef5bd5f987ceb5f7e5ebf88b904bbd4c5cbdeb2ff71b740" >> $CABALHOME/config
    echo "              2e8555dde16ebd8df076f1a8ef13b8f14c66bad8eafefd7d9e37d0ed711821fb" >> $CABALHOME/config
    echo "              8f79fd2389ab2967354407ec852cbe73f2e8635793ac446d09461ffb99527f6e" >> $CABALHOME/config
    echo "   key-threshold: 3"                                                            >> $CABALHOME/config
    fi
  - cat $CABALHOME/config
  - rm -fv cabal.project cabal.project.local cabal.project.freeze
  - travis_retry ${CABAL} v2-update -v
  - if [ $HCNUMVER -ge 80404 ] && [ $HCNUMVER -lt 80700 ] ; then ${CABAL} v2-install -w ${HC} -j2 doctest --constraint='doctest ==0.16.*' | color_cabal_output ; fi
  # Generate cabal.project
  - rm -rf cabal.project cabal.project.local cabal.project.freeze
  - touch cabal.project
  - |
    echo 'packages: "universe-base"' >> cabal.project
    echo 'packages: "universe-instances-extended"' >> cabal.project
    echo 'packages: "universe-reverse-instances"' >> cabal.project
    echo 'packages: "universe-dependent-sum"' >> cabal.project
    echo 'packages: "universe"' >> cabal.project
    echo 'packages: "deprecated/universe-instances-base"' >> cabal.project
    echo 'packages: "deprecated/universe-instances-trans"' >> cabal.project
  - |
    echo "write-ghc-environment-files: always" >> cabal.project
  - "for pkg in $($HCPKG list --simple-output); do echo $pkg | sed 's/-[^-]*$//' | grep -vE -- '^(universe|universe-base|universe-dependent-sum|universe-instances-base|universe-instances-extended|universe-instances-trans|universe-reverse-instances)$' | sed 's/^/constraints: /' | sed 's/$/ installed/' >> cabal.project.local; done"
  - cat cabal.project || true
  - cat cabal.project.local || true
  - if [ -f "universe-base/configure.ac" ]; then (cd "universe-base" && autoreconf -i); fi
  - if [ -f "universe-instances-extended/configure.ac" ]; then (cd "universe-instances-extended" && autoreconf -i); fi
  - if [ -f "universe-reverse-instances/configure.ac" ]; then (cd "universe-reverse-instances" && autoreconf -i); fi
  - if [ -f "universe-dependent-sum/configure.ac" ]; then (cd "universe-dependent-sum" && autoreconf -i); fi
  - if [ -f "universe/configure.ac" ]; then (cd "universe" && autoreconf -i); fi
  - if [ -f "deprecated/universe-instances-base/configure.ac" ]; then (cd "deprecated/universe-instances-base" && autoreconf -i); fi
  - if [ -f "deprecated/universe-instances-trans/configure.ac" ]; then (cd "deprecated/universe-instances-trans" && autoreconf -i); fi
  - ${CABAL} v2-freeze -w ${HC} ${TEST} ${BENCH} | color_cabal_output
  - "cat cabal.project.freeze | sed -E 's/^(constraints: *| *)//' | sed 's/any.//'"
  - rm  cabal.project.freeze
  - ${CABAL} v2-build -w ${HC} ${TEST} ${BENCH} --dep -j2 all | color_cabal_output
  - ${CABAL} v2-build -w ${HC} --disable-tests --disable-benchmarks --dep -j2 all | color_cabal_output
script:
  - DISTDIR=$(mktemp -d /tmp/dist-test.XXXX)
  # Packaging...
  - ${CABAL} v2-sdist all | color_cabal_output
  # Unpacking...
  - mv dist-newstyle/sdist/*.tar.gz ${DISTDIR}/
  - cd ${DISTDIR} || false
  - find . -maxdepth 1 -name '*.tar.gz' -exec tar -xvf '{}' \;
  # Generate cabal.project
  - rm -rf cabal.project cabal.project.local cabal.project.freeze
  - touch cabal.project
  - |
    echo 'packages: "universe-base-*/*.cabal"' >> cabal.project
    echo 'packages: "universe-instances-extended-*/*.cabal"' >> cabal.project
    echo 'packages: "universe-reverse-instances-*/*.cabal"' >> cabal.project
    echo 'packages: "universe-dependent-sum-*/*.cabal"' >> cabal.project
    echo 'packages: "universe-*/*.cabal"' >> cabal.project
    echo 'packages: "universe-instances-base-*/*.cabal"' >> cabal.project
    echo 'packages: "universe-instances-trans-*/*.cabal"' >> cabal.project
  - |
    echo "write-ghc-environment-files: always" >> cabal.project
  - "for pkg in $($HCPKG list --simple-output); do echo $pkg | sed 's/-[^-]*$//' | grep -vE -- '^(universe|universe-base|universe-dependent-sum|universe-instances-base|universe-instances-extended|universe-instances-trans|universe-reverse-instances)$' | sed 's/^/constraints: /' | sed 's/$/ installed/' >> cabal.project.local; done"
  - cat cabal.project || true
  - cat cabal.project.local || true
  # Building...
  # this builds all libraries and executables (without tests/benchmarks)
  - ${CABAL} v2-build -w ${HC} --disable-tests --disable-benchmarks all | color_cabal_output
  # Building with tests and benchmarks...
  # build & run tests, build benchmarks
  - ${CABAL} v2-build -w ${HC} ${TEST} ${BENCH} all | color_cabal_output
  # Testing...
  - ${CABAL} v2-test -w ${HC} ${TEST} ${BENCH} all | color_cabal_output
  # Doctest...
  - if [ $HCNUMVER -ge 80404 ] && [ $HCNUMVER -lt 80700 ] ; then (cd universe-base-* && doctest  src) ; fi
  - if [ $HCNUMVER -ge 80404 ] && [ $HCNUMVER -lt 80700 ] ; then (cd universe-instances-extended-* && doctest  src) ; fi
  - if [ $HCNUMVER -ge 80404 ] && [ $HCNUMVER -lt 80700 ] ; then (cd universe-reverse-instances-* && doctest  src) ; fi
  - if [ $HCNUMVER -ge 80404 ] && [ $HCNUMVER -lt 80700 ] ; then (cd universe-dependent-sum-* && doctest  src) ; fi
  - if [ $HCNUMVER -ge 80404 ] && [ $HCNUMVER -lt 80700 ] ; then (cd universe-* && doctest  src) ; fi
  - if [ $HCNUMVER -ge 80404 ] && [ $HCNUMVER -lt 80700 ] ; then (cd universe-instances-base-* && doctest  src) ; fi
  - if [ $HCNUMVER -ge 80404 ] && [ $HCNUMVER -lt 80700 ] ; then (cd universe-instances-trans-* && doctest  src) ; fi
  # cabal check...
  - (cd universe-base-* && ${CABAL} -vnormal check)
  - (cd universe-instances-extended-* && ${CABAL} -vnormal check)
  - (cd universe-reverse-instances-* && ${CABAL} -vnormal check)
  - (cd universe-dependent-sum-* && ${CABAL} -vnormal check)
  - (cd universe-* && ${CABAL} -vnormal check)
  - (cd universe-instances-base-* && ${CABAL} -vnormal check)
  - (cd universe-instances-trans-* && ${CABAL} -vnormal check)
  # haddock...
  - ${CABAL} v2-haddock -w ${HC} ${TEST} ${BENCH} all | color_cabal_output
  # Building without installed constraints for packages in global-db...
  - rm -f cabal.project.local
  - ${CABAL} v2-build -w ${HC} --disable-tests --disable-benchmarks all | color_cabal_output
  # Constraint sets
  - rm -rf cabal.project.local
  # Constraint set dependent-sum-0.4
  - ${CABAL} v2-build -w ${HC} --disable-tests --disable-benchmarks --constraint='dependent-sum ==0.4.*' all | color_cabal_output
  # Constraint set dependent-sum-0.5
  - if [ $HCNUMVER -ge 80000 ] ; then ${CABAL} v2-build -w ${HC} --disable-tests --disable-benchmarks --constraint='dependent-sum ==0.5.*' all | color_cabal_output ; fi

# REGENDATA ["--config","cabal.haskell-ci","cabal.project"]
# EOF
